/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.ooni.mk.nettest.swig;

public class NettestBase {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected NettestBase(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NettestBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ApiJNI.delete_NettestBase(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    ApiJNI.NettestBase_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    ApiJNI.NettestBase_change_ownership(this, swigCPtr, true);
  }

  public NettestBase() {
    this(ApiJNI.new_NettestBase(), true);
    ApiJNI.NettestBase_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public boolean run() {
    return (getClass() == NettestBase.class) ? ApiJNI.NettestBase_run(swigCPtr, this) : ApiJNI.NettestBase_runSwigExplicitNettestBase(swigCPtr, this);
  }

  public void interrupt() {
    ApiJNI.NettestBase_interrupt(swigCPtr, this);
  }

  public void onFailureAsnLookup(EventFailureAsnLookup arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onFailureAsnLookup(swigCPtr, this, EventFailureAsnLookup.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onFailureAsnLookupSwigExplicitNettestBase(swigCPtr, this, EventFailureAsnLookup.getCPtr(arg0), arg0);
  }

  public void onFailureCcLookup(EventFailureCcLookup arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onFailureCcLookup(swigCPtr, this, EventFailureCcLookup.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onFailureCcLookupSwigExplicitNettestBase(swigCPtr, this, EventFailureCcLookup.getCPtr(arg0), arg0);
  }

  public void onFailureIpLookup(EventFailureIpLookup arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onFailureIpLookup(swigCPtr, this, EventFailureIpLookup.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onFailureIpLookupSwigExplicitNettestBase(swigCPtr, this, EventFailureIpLookup.getCPtr(arg0), arg0);
  }

  public void onFailureMeasurement(EventFailureMeasurement arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onFailureMeasurement(swigCPtr, this, EventFailureMeasurement.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onFailureMeasurementSwigExplicitNettestBase(swigCPtr, this, EventFailureMeasurement.getCPtr(arg0), arg0);
  }

  public void onFailureMeasurementSubmission(EventFailureMeasurementSubmission arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onFailureMeasurementSubmission(swigCPtr, this, EventFailureMeasurementSubmission.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onFailureMeasurementSubmissionSwigExplicitNettestBase(swigCPtr, this, EventFailureMeasurementSubmission.getCPtr(arg0), arg0);
  }

  public void onFailureReportCreate(EventFailureReportCreate arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onFailureReportCreate(swigCPtr, this, EventFailureReportCreate.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onFailureReportCreateSwigExplicitNettestBase(swigCPtr, this, EventFailureReportCreate.getCPtr(arg0), arg0);
  }

  public void onFailureReportClose(EventFailureReportClose arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onFailureReportClose(swigCPtr, this, EventFailureReportClose.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onFailureReportCloseSwigExplicitNettestBase(swigCPtr, this, EventFailureReportClose.getCPtr(arg0), arg0);
  }

  public void onFailureResolverLookup(EventFailureResolverLookup arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onFailureResolverLookup(swigCPtr, this, EventFailureResolverLookup.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onFailureResolverLookupSwigExplicitNettestBase(swigCPtr, this, EventFailureResolverLookup.getCPtr(arg0), arg0);
  }

  public void onFailureStartup(EventFailureStartup arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onFailureStartup(swigCPtr, this, EventFailureStartup.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onFailureStartupSwigExplicitNettestBase(swigCPtr, this, EventFailureStartup.getCPtr(arg0), arg0);
  }

  public void onLog(EventLog arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onLog(swigCPtr, this, EventLog.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onLogSwigExplicitNettestBase(swigCPtr, this, EventLog.getCPtr(arg0), arg0);
  }

  public void onMeasurement(EventMeasurement arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onMeasurement(swigCPtr, this, EventMeasurement.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onMeasurementSwigExplicitNettestBase(swigCPtr, this, EventMeasurement.getCPtr(arg0), arg0);
  }

  public void onStatusEnd(EventStatusEnd arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusEnd(swigCPtr, this, EventStatusEnd.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusEndSwigExplicitNettestBase(swigCPtr, this, EventStatusEnd.getCPtr(arg0), arg0);
  }

  public void onStatusGeoipLookup(EventStatusGeoipLookup arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusGeoipLookup(swigCPtr, this, EventStatusGeoipLookup.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusGeoipLookupSwigExplicitNettestBase(swigCPtr, this, EventStatusGeoipLookup.getCPtr(arg0), arg0);
  }

  public void onStatusProgress(EventStatusProgress arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusProgress(swigCPtr, this, EventStatusProgress.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusProgressSwigExplicitNettestBase(swigCPtr, this, EventStatusProgress.getCPtr(arg0), arg0);
  }

  public void onStatusQueued(EventStatusQueued arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusQueued(swigCPtr, this, EventStatusQueued.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusQueuedSwigExplicitNettestBase(swigCPtr, this, EventStatusQueued.getCPtr(arg0), arg0);
  }

  public void onStatusMeasurementStart(EventStatusMeasurementStart arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusMeasurementStart(swigCPtr, this, EventStatusMeasurementStart.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusMeasurementStartSwigExplicitNettestBase(swigCPtr, this, EventStatusMeasurementStart.getCPtr(arg0), arg0);
  }

  public void onStatusMeasurementSubmission(EventStatusMeasurementSubmission arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusMeasurementSubmission(swigCPtr, this, EventStatusMeasurementSubmission.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusMeasurementSubmissionSwigExplicitNettestBase(swigCPtr, this, EventStatusMeasurementSubmission.getCPtr(arg0), arg0);
  }

  public void onStatusMeasurementDone(EventStatusMeasurementDone arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusMeasurementDone(swigCPtr, this, EventStatusMeasurementDone.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusMeasurementDoneSwigExplicitNettestBase(swigCPtr, this, EventStatusMeasurementDone.getCPtr(arg0), arg0);
  }

  public void onStatusReportClose(EventStatusReportClose arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusReportClose(swigCPtr, this, EventStatusReportClose.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusReportCloseSwigExplicitNettestBase(swigCPtr, this, EventStatusReportClose.getCPtr(arg0), arg0);
  }

  public void onStatusReportCreate(EventStatusReportCreate arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusReportCreate(swigCPtr, this, EventStatusReportCreate.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusReportCreateSwigExplicitNettestBase(swigCPtr, this, EventStatusReportCreate.getCPtr(arg0), arg0);
  }

  public void onStatusResolverLookup(EventStatusResolverLookup arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusResolverLookup(swigCPtr, this, EventStatusResolverLookup.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusResolverLookupSwigExplicitNettestBase(swigCPtr, this, EventStatusResolverLookup.getCPtr(arg0), arg0);
  }

  public void onStatusStarted(EventStatusStarted arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onStatusStarted(swigCPtr, this, EventStatusStarted.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onStatusStartedSwigExplicitNettestBase(swigCPtr, this, EventStatusStarted.getCPtr(arg0), arg0);
  }

  public void onTaskTerminated(EventTaskTerminated arg0) {
    if (getClass() == NettestBase.class) ApiJNI.NettestBase_onTaskTerminated(swigCPtr, this, EventTaskTerminated.getCPtr(arg0), arg0); else ApiJNI.NettestBase_onTaskTerminatedSwigExplicitNettestBase(swigCPtr, this, EventTaskTerminated.getCPtr(arg0), arg0);
  }

}
